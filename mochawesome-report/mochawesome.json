{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2017-09-24T16:21:42.742Z",
    "end": "2017-09-24T16:21:43.133Z",
    "duration": 391,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Users",
        "suites": [
          {
            "title": "/GET users",
            "suites": [],
            "tests": [
              {
                "title": "should return a list of users",
                "fullTitle": "Users /GET users should return a list of users",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  .get('/users')\n  .end(function(error, response) {\n    response.body.should.be.a('array');\n    response.should.have.status(200);\n    response.body.length.should.be.eql(100);\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "53f8ac48-3ee7-4d2a-97d1-0203604160c9",
                "parentUUID": "08a93274-723b-4719-b61e-7463b4292a3b",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/tests/accept/users.js",
            "uuid": "08a93274-723b-4719-b61e-7463b4292a3b",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/mnt/2678F16378F131E3/dev/personalProjects/contact-users-restApi/tests/accept/users.js",
            "passes": [
              {
                "title": "should return a list of users",
                "fullTitle": "Users /GET users should return a list of users",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  .get('/users')\n  .end(function(error, response) {\n    response.body.should.be.a('array');\n    response.should.have.status(200);\n    response.body.length.should.be.eql(100);\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "53f8ac48-3ee7-4d2a-97d1-0203604160c9",
                "parentUUID": "08a93274-723b-4719-b61e-7463b4292a3b",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 76,
            "rootEmpty": false
          },
          {
            "title": "/GET users/:id",
            "suites": [],
            "tests": [
              {
                "title": "should return a single user",
                "fullTitle": "Users /GET users/:id should return a single user",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// Find a user in the DB\nUser.findOne({}, function(error, user) {\n  const id = user._id;\n  // Read this user by id\n  chai.request(url)\n    .get('/users/' + id)\n    .end(function(error, response) {\n      response.should.have.status(200);\n      expect(response.body).to.be.a('object');\n      expect(response.body.name.first).to.be.a('string');\n      done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1a49660a-39f3-4626-a852-5d030217ee68",
                "parentUUID": "ec3482f1-ca33-4bb1-8400-390b39b06e6d",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/tests/accept/users.js",
            "uuid": "ec3482f1-ca33-4bb1-8400-390b39b06e6d",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/mnt/2678F16378F131E3/dev/personalProjects/contact-users-restApi/tests/accept/users.js",
            "passes": [
              {
                "title": "should return a single user",
                "fullTitle": "Users /GET users/:id should return a single user",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// Find a user in the DB\nUser.findOne({}, function(error, user) {\n  const id = user._id;\n  // Read this user by id\n  chai.request(url)\n    .get('/users/' + id)\n    .end(function(error, response) {\n      response.should.have.status(200);\n      expect(response.body).to.be.a('object');\n      expect(response.body.name.first).to.be.a('string');\n      done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1a49660a-39f3-4626-a852-5d030217ee68",
                "parentUUID": "ec3482f1-ca33-4bb1-8400-390b39b06e6d",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9,
            "rootEmpty": false
          },
          {
            "title": "/POST users/",
            "suites": [],
            "tests": [
              {
                "title": "should create a single user",
                "fullTitle": "Users /POST users/ should create a single user",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  .post('/users')\n  .send({'name': 'test'})\n  .end(function (error, response) {\n    response.should.have.status(200);\n    expect(response.body).to.be.a('object');\n    response.body.should.have.property('name');\n    expect(response.body.name).to.be.a('string');\n    response.body.name.should.be.eql('test');\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "55044a4b-262f-4859-b03e-0f251014e1d9",
                "parentUUID": "803d7e98-7c43-45c3-88fe-349f97977c66",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/tests/accept/users.js",
            "uuid": "803d7e98-7c43-45c3-88fe-349f97977c66",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/mnt/2678F16378F131E3/dev/personalProjects/contact-users-restApi/tests/accept/users.js",
            "passes": [
              {
                "title": "should create a single user",
                "fullTitle": "Users /POST users/ should create a single user",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  .post('/users')\n  .send({'name': 'test'})\n  .end(function (error, response) {\n    response.should.have.status(200);\n    expect(response.body).to.be.a('object');\n    response.body.should.have.property('name');\n    expect(response.body.name).to.be.a('string');\n    response.body.name.should.be.eql('test');\n    done();\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "55044a4b-262f-4859-b03e-0f251014e1d9",
                "parentUUID": "803d7e98-7c43-45c3-88fe-349f97977c66",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 25,
            "rootEmpty": false
          },
          {
            "title": "PUT users/:id",
            "suites": [],
            "tests": [
              {
                "title": "should update a user",
                "fullTitle": "Users PUT users/:id should update a user",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before updating first user name - test true\n    response.body[0].name.first.should.be.eql('alison');\n    chai.request(url)\n      // Update first user name\n      .put('/users/' + response.body[0]._id)\n      .send({'name': 'test'})\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('name');\n        response.body.should.have.property('_id');\n        response.body.name.should.eql('test');\n        console.log(response.body);\n        done();\n      });\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "b522f516-f66c-4576-a81d-66d04a4aa6ba",
                "parentUUID": "2aacdc04-3fdb-4744-bbbe-ecc5ae1a5600",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/tests/accept/users.js",
            "uuid": "2aacdc04-3fdb-4744-bbbe-ecc5ae1a5600",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/mnt/2678F16378F131E3/dev/personalProjects/contact-users-restApi/tests/accept/users.js",
            "passes": [
              {
                "title": "should update a user",
                "fullTitle": "Users PUT users/:id should update a user",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before updating first user name - test true\n    response.body[0].name.first.should.be.eql('alison');\n    chai.request(url)\n      // Update first user name\n      .put('/users/' + response.body[0]._id)\n      .send({'name': 'test'})\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('name');\n        response.body.should.have.property('_id');\n        response.body.name.should.eql('test');\n        console.log(response.body);\n        done();\n      });\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "b522f516-f66c-4576-a81d-66d04a4aa6ba",
                "parentUUID": "2aacdc04-3fdb-4744-bbbe-ecc5ae1a5600",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 46,
            "rootEmpty": false
          },
          {
            "title": "DELETE users/:id",
            "suites": [],
            "tests": [
              {
                "title": "should delete a user",
                "fullTitle": "Users DELETE users/:id should delete a user",
                "timedOut": false,
                "duration": 42,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before deleting first user - test true\n    response.body[0].location.street.should.be.eql('1097 the avenue');\n    chai.request(url)\n      // Delete the first user\n      .delete('/users/' + response.body[0]._id)\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.not.have.property('_id');\n        response.body.should.eql({});\n        done();\n      });\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "5b09bd97-e6b9-47fc-9d03-63151fedbcb0",
                "parentUUID": "662c45ca-4219-44c6-8ab4-7b34b8e96775",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/tests/accept/users.js",
            "uuid": "662c45ca-4219-44c6-8ab4-7b34b8e96775",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/mnt/2678F16378F131E3/dev/personalProjects/contact-users-restApi/tests/accept/users.js",
            "passes": [
              {
                "title": "should delete a user",
                "fullTitle": "Users DELETE users/:id should delete a user",
                "timedOut": false,
                "duration": 42,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before deleting first user - test true\n    response.body[0].location.street.should.be.eql('1097 the avenue');\n    chai.request(url)\n      // Delete the first user\n      .delete('/users/' + response.body[0]._id)\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.not.have.property('_id');\n        response.body.should.eql({});\n        done();\n      });\n  });",
                "err": {},
                "isRoot": false,
                "uuid": "5b09bd97-e6b9-47fc-9d03-63151fedbcb0",
                "parentUUID": "662c45ca-4219-44c6-8ab4-7b34b8e96775",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 42,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 15000,
        "file": "/tests/accept/users.js",
        "uuid": "6bb773c1-7d74-464d-a850-f6737eeee948",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Users \"before all\" hook",
            "timedOut": false,
            "duration": 185,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// Start our app on an alternative port for acceptance tests\nserver.listen(8001, function() {\n  logger.info('Listening at http://localhost:8001 for acceptance tests');\n  // Seed the DB with our users\n  seed(function(error) {\n    done(error);\n  });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c2234c43-5c5e-4f99-be5c-04b3f001e9d9",
            "parentUUID": "6bb773c1-7d74-464d-a850-f6737eeee948",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "/mnt/2678F16378F131E3/dev/personalProjects/contact-users-restApi/tests/accept/users.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 15000,
    "uuid": "aad8221e-e767-4d64-94a4-a6bd879536f2",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a list of users",
      "fullTitle": "/GET users should return a list of users",
      "timedOut": false,
      "duration": 76,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  .get('/users')\n  .end(function(error, response) {\n    response.body.should.be.a('array');\n    response.should.have.status(200);\n    response.body.length.should.be.eql(100);\n    done();\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "53f8ac48-3ee7-4d2a-97d1-0203604160c9",
      "parentUUID": "08a93274-723b-4719-b61e-7463b4292a3b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a single user",
      "fullTitle": "/GET users/:id should return a single user",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// Find a user in the DB\nUser.findOne({}, function(error, user) {\n  const id = user._id;\n  // Read this user by id\n  chai.request(url)\n    .get('/users/' + id)\n    .end(function(error, response) {\n      response.should.have.status(200);\n      expect(response.body).to.be.a('object');\n      expect(response.body.name.first).to.be.a('string');\n      done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1a49660a-39f3-4626-a852-5d030217ee68",
      "parentUUID": "ec3482f1-ca33-4bb1-8400-390b39b06e6d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should create a single user",
      "fullTitle": "/POST users/ should create a single user",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  .post('/users')\n  .send({'name': 'test'})\n  .end(function (error, response) {\n    response.should.have.status(200);\n    expect(response.body).to.be.a('object');\n    response.body.should.have.property('name');\n    expect(response.body.name).to.be.a('string');\n    response.body.name.should.be.eql('test');\n    done();\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "55044a4b-262f-4859-b03e-0f251014e1d9",
      "parentUUID": "803d7e98-7c43-45c3-88fe-349f97977c66",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update a user",
      "fullTitle": "PUT users/:id should update a user",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before updating first user name - test true\n    response.body[0].name.first.should.be.eql('alison');\n    chai.request(url)\n      // Update first user name\n      .put('/users/' + response.body[0]._id)\n      .send({'name': 'test'})\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('name');\n        response.body.should.have.property('_id');\n        response.body.name.should.eql('test');\n        console.log(response.body);\n        done();\n      });\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "b522f516-f66c-4576-a81d-66d04a4aa6ba",
      "parentUUID": "2aacdc04-3fdb-4744-bbbe-ecc5ae1a5600",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should delete a user",
      "fullTitle": "DELETE users/:id should delete a user",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before deleting first user - test true\n    response.body[0].location.street.should.be.eql('1097 the avenue');\n    chai.request(url)\n      // Delete the first user\n      .delete('/users/' + response.body[0]._id)\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.not.have.property('_id');\n        response.body.should.eql({});\n        done();\n      });\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "5b09bd97-e6b9-47fc-9d03-63151fedbcb0",
      "parentUUID": "662c45ca-4219-44c6-8ab4-7b34b8e96775",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a list of users",
      "fullTitle": "/GET users should return a list of users",
      "timedOut": false,
      "duration": 76,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  .get('/users')\n  .end(function(error, response) {\n    response.body.should.be.a('array');\n    response.should.have.status(200);\n    response.body.length.should.be.eql(100);\n    done();\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "53f8ac48-3ee7-4d2a-97d1-0203604160c9",
      "parentUUID": "08a93274-723b-4719-b61e-7463b4292a3b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a single user",
      "fullTitle": "/GET users/:id should return a single user",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// Find a user in the DB\nUser.findOne({}, function(error, user) {\n  const id = user._id;\n  // Read this user by id\n  chai.request(url)\n    .get('/users/' + id)\n    .end(function(error, response) {\n      response.should.have.status(200);\n      expect(response.body).to.be.a('object');\n      expect(response.body.name.first).to.be.a('string');\n      done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1a49660a-39f3-4626-a852-5d030217ee68",
      "parentUUID": "ec3482f1-ca33-4bb1-8400-390b39b06e6d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should create a single user",
      "fullTitle": "/POST users/ should create a single user",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  .post('/users')\n  .send({'name': 'test'})\n  .end(function (error, response) {\n    response.should.have.status(200);\n    expect(response.body).to.be.a('object');\n    response.body.should.have.property('name');\n    expect(response.body.name).to.be.a('string');\n    response.body.name.should.be.eql('test');\n    done();\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "55044a4b-262f-4859-b03e-0f251014e1d9",
      "parentUUID": "803d7e98-7c43-45c3-88fe-349f97977c66",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update a user",
      "fullTitle": "PUT users/:id should update a user",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before updating first user name - test true\n    response.body[0].name.first.should.be.eql('alison');\n    chai.request(url)\n      // Update first user name\n      .put('/users/' + response.body[0]._id)\n      .send({'name': 'test'})\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('name');\n        response.body.should.have.property('_id');\n        response.body.name.should.eql('test');\n        console.log(response.body);\n        done();\n      });\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "b522f516-f66c-4576-a81d-66d04a4aa6ba",
      "parentUUID": "2aacdc04-3fdb-4744-bbbe-ecc5ae1a5600",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should delete a user",
      "fullTitle": "DELETE users/:id should delete a user",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(url)\n  // Get list of users\n  .get('/users')\n  .end(function (error, response) {\n    // Before deleting first user - test true\n    response.body[0].location.street.should.be.eql('1097 the avenue');\n    chai.request(url)\n      // Delete the first user\n      .delete('/users/' + response.body[0]._id)\n      .end(function (error, response) {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.not.have.property('_id');\n        response.body.should.eql({});\n        done();\n      });\n  });",
      "err": {},
      "isRoot": false,
      "uuid": "5b09bd97-e6b9-47fc-9d03-63151fedbcb0",
      "parentUUID": "662c45ca-4219-44c6-8ab4-7b34b8e96775",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}